trigger:
  branches:
    include:
      - main

variables:
  IMAGE_NAME: 'serviceexample'
  TAG: '$(Build.BuildId)'

stages:
  - stage: BuildAndPush
    displayName: "Build and Push Docker Image into ACR"
    jobs:
      - job: Build
        pool:
          name: SelfHostedPool
        steps:
          - checkout: self
            displayName: 'Checkout source code'

          - script: dotnet restore
            displayName: 'Restore .NET Dependencies'

          - script: dotnet build --configuration Release --no-restore
            displayName: 'Build Project'

          - script: dotnet test --configuration Release --verbosity minimal
            displayName: 'Run Unit Tests'

          # BUILD
          - task: Bash@3
            displayName: 'Build Docker Image'
            inputs:
              targetType: 'inline'
              script: |
                echo "=== Building Docker Image ==="
                docker build -t serviceexampleacr.azurecr.io/$(IMAGE_NAME):$(TAG) .
                echo "✅ Build completed"

          # PUSH with explicit verification
          - task: Bash@3
            displayName: 'Push to ACR'
            inputs:
              targetType: 'inline'
              script: |
                echo "=== Starting ACR Push ==="
                
                # Debug: Show what we're trying to push
                echo "Image to push: serviceexampleacr.azurecr.io/$(IMAGE_NAME):$(TAG)"
                docker images | grep serviceexample
                
                # Login with credentials
                echo "=== Logging into ACR ==="
                echo "$(ACR_PASSWORD)" | docker login serviceexampleacr.azurecr.io --username "$(ACR_USERNAME)" --password-stdin
                
                # Push the image
                echo "=== Pushing Image ==="
                docker push serviceexampleacr.azurecr.io/$(IMAGE_NAME):$(TAG)
                
                echo "✅ Push command completed"
                
                # Verify the push worked
                echo "=== Verifying in ACR ==="
                az acr repository show-tags --name serviceexampleacr --repository $(IMAGE_NAME) --output table
