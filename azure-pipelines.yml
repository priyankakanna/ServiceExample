trigger:
  branches:
    include:
      - main

variables:
  IMAGE_NAME: 'serviceexample'
  TAG: '$(Build.BuildId)'
  LATEST_TAG: 'latest'
  BUILD_CONTEXT: 'ServiceExample'
  azureSubscription: 'your-azure-service-connection'

stages:
  - stage: BuildAndPush
    displayName: "Build, Test, and Push Docker Image"
    jobs:
      - job: Build
        pool:
          name: SelfHostedPool
        steps:
          - checkout: self
            displayName: 'Checkout source code'

          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              version: '9.0.x'
            displayName: 'Install .NET SDK 9.0.x'

          - task: Cache@2
            inputs:
              key: 'nuget | "$(Agent.OS)" | **/*.csproj'
              path: ~/.nuget/packages
            displayName: 'Cache NuGet packages'

          - script: dotnet restore --verbosity quiet
            displayName: 'Restore .NET Dependencies'

          - script: dotnet build ServiceExample/ServiceExample.csproj -c Release --no-restore
            displayName: 'Build Project'

          - script: dotnet test UnitTests/UnitTests.csproj --configuration Release --no-build --verbosity minimal
            displayName: 'Run Unit Tests'

          # üî• OPTIMIZED: Pre-login check and Azure CLI login
          - task: AzureCLI@2
            displayName: 'Check ACR and Login'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "Checking ACR SKU..."
                ACR_SKU=$(az acr show --name serviceexampleacr --query sku.name -o tsv)
                echo "Current ACR SKU: $ACR_SKU"
                
                if [ "$ACR_SKU" = "Basic" ]; then
                  echo "‚ö†Ô∏è  Using Basic SKU - login may be slower. Consider upgrading to Standard/Premium."
                fi
                
                echo "Logging into ACR..."
                az acr login --name serviceexampleacr
                echo "‚úÖ ACR login completed"

          # üî• Single build and push operation
          - task: Docker@2
            displayName: 'Build and Push Docker Image'
            inputs:
              command: buildAndPush
              containerRegistry: 'serviceexampleacr'
              repository: '$(IMAGE_NAME)'
              dockerfile: 'Dockerfile'
              buildContext: '$(BUILD_CONTEXT)'
              tags: |
                $(TAG)
                $(LATEST_TAG)
              # Add build arguments for better caching
              arguments: '--build-arg BUILDKIT_INLINE_CACHE=1'
