trigger:
  branches:
    include:
      - main

variables:
  IMAGE_NAME: 'serviceexample'
  TAG: '$(Build.BuildId)'

stages:
  - stage: BuildAndPush
    displayName: "Build and Push Docker Image"
    jobs:
      - job: Build
        pool:
          name: SelfHostedPool
        timeoutInMinutes: 8
        steps:
          - checkout: self
            displayName: 'Checkout source code'

          - script: dotnet restore
            displayName: 'Restore .NET Dependencies'

          - script: dotnet build --configuration Release --no-restore
            displayName: 'Build Project'

          - script: dotnet test --configuration Release --verbosity minimal
            displayName: 'Run Unit Tests'

          # ðŸ”¥ BUILD ONLY
          - task: Bash@3
            displayName: 'Build Docker Image'
            inputs:
              targetType: 'inline'
              script: |
                echo "=== Building Docker Image ==="
                docker build -t serviceexampleacr.azurecr.io/$(IMAGE_NAME):$(TAG) . --progress=plain
                echo "âœ… Build completed"

          # ðŸ”¥ PUSH WITH CREDENTIAL BYPASS
          - task: AzureCLI@2
            displayName: 'Push Docker Image (No Credential Storage)'
            inputs:
              azureSubscription: 'serviceexampleacr-connection'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "=== Pushing with Credential Bypass ==="
                
                # Get ACR credentials
                ACR_USERNAME=$(az acr credential show --name serviceexampleacr --query "username" -o tsv)
                ACR_PASSWORD=$(az acr credential show --name serviceexampleacr --query "passwords[0].value" -o tsv)
                
                # Use temporary environment to avoid credential storage
                DOCKER_CONFIG=/dev/null docker login serviceexampleacr.azurecr.io --username "$ACR_USERNAME" --password-stdin <<< "$ACR_PASSWORD"
                
                # Push immediately after login
                docker push serviceexampleacr.azurecr.io/$(IMAGE_NAME):$(TAG)
                
                echo "âœ… Push completed successfully"
