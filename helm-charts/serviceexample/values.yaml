replicaCount: 1

# Main Application Image from ACR
image:
  repository: serviceexampleacr.azurecr.io/serviceexample
  tag: latest
  pullPolicy: IfNotPresent

# Service Configuration - Match your Docker setup
service:
  type: ClusterIP
  port: 9080  # Your application port
  targetPort: 9080  # Container port

# Image Pull Secrets for ACR
imagePullSecrets:
  - name: acr-secret

# MongoDB - exact match to docker-compose
mongodb:
  enabled: true
  image:
    repository: mongo
    tag: latest
    pullPolicy: IfNotPresent
  persistence:
    enabled: true
    size: 1Gi
    storageClass: "local-path"

# Redis - exact match to docker-compose  
redis:
  enabled: true
  image:
    repository: redis
    tag: latest
    pullPolicy: IfNotPresent
  master:
    persistence:
      enabled: true
      size: 1Gi
      storageClass: "local-path"

# NATS - exact match to docker-compose
nats:
  enabled: true
  image:
    repository: nats
    tag: latest
    pullPolicy: IfNotPresent

# Environment variables - EXACT match to docker-compose
env:
  - name: ASPNETCORE_ENVIRONMENT
    value: "Production"
  - name: ASPNETCORE_URLS
    value: "http://+:9080"  # Exact match to Dockerfile
  - name: Aspire__MongoDB__Driver__ConnectionString
    value: "mongodb://serviceexample-mongodb:27017"  # K8s service name
  - name: Aspire__StackExchange__Redis__ConnectionString
    value: "serviceexample-redis-master:6379"  # K8s service name  
  - name: Aspire__NATS__Net__ConnectionString
    value: "nats://serviceexample-nats:4222"  # K8s service name

# Health checks - fixed for port 9080
livenessProbe:
  httpGet:
    path: /
    port: 9080  # Your application port
  initialDelaySeconds: 30  # Give .NET app time to start
  periodSeconds: 10
  timeoutSeconds: 5

readinessProbe:
  httpGet:
    path: /
    port: 9080  # Your application port
  initialDelaySeconds: 15
  periodSeconds: 5
  timeoutSeconds: 3

# Disable autoscaling for demo
autoscaling:
  enabled: false

# Basic resources
resources:
  requests:
    memory: "256Mi"
    cpu: "250m"
  limits:
    memory: "512Mi"
    cpu: "500m"

# Security - non-root user (matches your Dockerfile APP_UID)
securityContext:
  runAsNonRoot: true
  runAsUser: 10000
  allowPrivilegeEscalation: false

nats:
  enabled: true
  image:
    repository: nats
    tag: "alpine"
    pullPolicy: IfNotPresent
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"

# NATS Configuration
nats:
  enabled: true
  image:
    repository: nats
    tag: "alpine"
    pullPolicy: IfNotPresent
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
